# Macro to add an application that links to ${MRCORE_LIBRARIES}
MACRO(OOM_ADD_EXECUTABLE PARAM_EXE_NAME PARAM_FILE_LIST)
	SET(EXE_NAME "${PARAM_EXE_NAME}")
	IF("${EXE_NAME}" MATCHES "AUTO")
		STRING(REGEX REPLACE ".*/([^/]*)$" "\\1" EXE_NAME ${CMAKE_CURRENT_SOURCE_DIR})
	ENDIF("${EXE_NAME}" MATCHES "AUTO")
	SET(FILE_LIST ${PARAM_FILE_LIST})
	IF("${FILE_LIST}" STREQUAL "ALL_FILES" OR "${FILE_LIST}" STREQUAL "AUTO")
		FILE(GLOB FILE_LIST "*.cpp" "*.c" "*.cc")
	ENDIF("${FILE_LIST}" STREQUAL "ALL_FILES" OR "${FILE_LIST}" STREQUAL "AUTO")
	IF("${FILE_LIST}" STREQUAL "ALL_FILES_RECURSE" OR "${FILE_LIST}" STREQUAL "AUTO_RECURSE")
		FILE(GLOB_RECURSE FILE_LIST "*.cpp" "*.c" "*.cc")
	ENDIF("${FILE_LIST}" STREQUAL "ALL_FILES_RECURSE" OR "${FILE_LIST}" STREQUAL "AUTO_RECURSE")

	ADD_EXECUTABLE(${EXE_NAME} ${FILE_LIST})

	INCLUDE_DIRECTORIES("${OOM_TRUNK_DIR}/src/libraries" "${OOM_TRUNK_DIR}/src/libraries/core")
	LINK_DIRECTORIES("${OOM_TRUNK_DIR}/libs")
	TARGET_LINK_LIBRARIES(${EXE_NAME} oomcore oomparts oompackages)

ENDMACRO(OOM_ADD_EXECUTABLE)

# Macro to add a MR library in the build system
MACRO(OOM_ADD_LIBRARY PARAM_FILE_LIST)
	STRING(REGEX REPLACE ".*/([^/]*)$" "\\1" LIBRARY_NAME ${CMAKE_CURRENT_SOURCE_DIR})
	SET(FILE_LIST ${PARAM_FILE_LIST})
	IF("${FILE_LIST}" STREQUAL "ALL_FILES" OR "${FILE_LIST}" STREQUAL "AUTO")
		FILE(GLOB FILE_LIST "*.cpp" "*.c" "*.cc")
	ENDIF("${FILE_LIST}" STREQUAL "ALL_FILES" OR "${FILE_LIST}" STREQUAL "AUTO")
	IF("${FILE_LIST}" STREQUAL "ALL_FILES_RECURSE" OR "${FILE_LIST}" STREQUAL "AUTO_RECURSE")
		FILE(GLOB_RECURSE FILE_LIST "*.cpp" "*.c" "*.cc")
	ENDIF("${FILE_LIST}" STREQUAL "ALL_FILES_RECURSE" OR "${FILE_LIST}" STREQUAL "AUTO_RECURSE")

	IF(WIN32)
		ADD_LIBRARY(oom${LIBRARY_NAME} STATIC ${FILE_LIST})
	ELSE(WIN32)	
		ADD_LIBRARY(oom${LIBRARY_NAME} SHARED ${FILE_LIST})
	ENDIF(WIN32)

	#TARGET_LINK_LIBRARIES(oom${LIBRARY_NAME} ...)
	INCLUDE_DIRECTORIES("${OOM_TRUNK_DIR}/src/libraries" "${OOM_TRUNK_DIR}/src/libraries/core")
	
ENDMACRO(OOM_ADD_LIBRARY)
